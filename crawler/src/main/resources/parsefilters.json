{
  "com.digitalpebble.stormcrawler.parse.ParseFilters": [
    {
      "class": "com.digitalpebble.stormcrawler.parse.filter.XPathFilter",
      "name": "XPathFilter",
      "params": {
        "parse.title": [
            "/HTML/HEAD/TITLE",
            "/HTML/HEAD/META[@name=\"title\"]/@content"
        ],
        "topics.data.portal.xpath": [
          "/HTML/HEAD/META[@generator][starts-with(@content, 'ckan')]/@content",
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'DKAN')]",
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'geoportal')]",
          "//SCRIPT[contains(text(), 'entryscape-catalog-portal')]"
        ],
        "topics.data.api.xpath": [
          "//A[contains(@href, 'GetCapabilities')]/@href",
          "//A[contains(@href, 'WFS')]/@href",
          "//A[contains(@href, 'WMS')]/@href"
        ],
        "topics.data.link.xpath": [
          "//SCRIPT[@type='application/ld+json'][contains(text(), 'Dataset\"')]/text()",
          "//A[contains(@href, 'dataset')]/@href",
          "//A[contains(@href, 'csv')]/@href",
          "//A[contains(@href, 'json')]/@href",
          "//A[contains(@href, '.xml')]/@href",
          "//A[contains(@href, '.zip')]/@href"
        ],
        "topics.data.pdf.xpath": [
          "//A[contains(string-join(text()), 'PDF') or contains(string-join(text()), 'pdf') or contains(@href, 'pdf')]/@href",
          "//A[contains(string-join(text()), 'download')]/@href"
        ],
        "topics.data.license.xpath": [
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'License')]/../descendant::text()",
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'Lizenz')]/../descendant::text()"
        ],
        "topics.contact.xpath": [
          "//*[not(name()=SCRIPT)][contains(string-join(text()), '@')][not(contains(string-join(text()), '@import '))]/text()",
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'Kontakt')]/../descendant::text()",
          "//*[not(name()=SCRIPT)][contains(string-join(text()), 'Contact')]/../descendant::text()"
        ]
      }
    },
    {
      "class": "org.n52.webcrawl.SimpleTopicScoreParseFilter",
      "name": "SimpleTopicScoreParseFilter",
      "params": {
        "topics.data.portal.keywords": [
          "ckan"
        ],
        "topics.data.realtime.keywords": [
          "realtime"
        ],
        "topics.data.historic.keywords": [
          "historic"
        ]
      }
    },
    {
      "class": "com.digitalpebble.stormcrawler.parse.filter.DomainParseFilter",
      "name": "DomainParseFilter",
      "params": {
        "key": "host",
        "byHost": true
       }
    }
  ]
}
